package com.cliffex.Fixezi.MyUtils;import android.annotation.SuppressLint;import android.app.IntentService;import android.app.NotificationManager;import android.app.PendingIntent;import android.app.TaskStackBuilder;import android.content.Context;import android.content.Intent;import android.graphics.BitmapFactory;import android.media.RingtoneManager;import android.net.Uri;import androidx.core.app.NotificationCompat;import android.util.Log;import com.cliffex.Fixezi.AllJobsDetail;import com.cliffex.Fixezi.EmployeeLogin;import com.cliffex.Fixezi.IncomingJobRequestDetail;import com.cliffex.Fixezi.JobRequestUserDetail;import com.cliffex.Fixezi.LoginActivity;import com.cliffex.Fixezi.R;import com.cliffex.Fixezi.RescheduleJobsDetail;import com.cliffex.Fixezi.SessionTradesman;import com.cliffex.Fixezi.SessionWorker;import com.cliffex.Fixezi.SplashTwo;import com.cliffex.Fixezi.TradesmanActivity;import com.cliffex.Fixezi.TradesmanLogin;import java.util.Random;import static com.cliffex.Fixezi.Other.MySharedPref.saveData;@SuppressLint("NewApi")public class GCMNotificationIntentService extends IntentService {    NotificationCompat.Builder builder;    String msg = "nulll";    SessionTradesman sessionTradesman;    SessionWorker sessionWorker;    public GCMNotificationIntentService() {        super("GcmIntentService");    }    @Override    protected void onHandleIntent(Intent intent) {        msg = intent.getExtras().getString("message");        sessionTradesman = new SessionTradesman(getApplicationContext());        sessionWorker = new SessionWorker(getApplicationContext());        Random random = new Random();        int NotificationID = random.nextInt(1000);        Log.e("NOTIFICATION", ">>>>" + msg);        if (msg.equalsIgnoreCase("tradesman_request")) {            String Problem = intent.getExtras().getString("problem_id");            Log.e("Problem", ">>>" + Problem);            Uri uri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);            NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(this)                    .setSmallIcon(R.drawable.mainlogo)                    .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.drawable.mainlogo))                    .setContentTitle("fixeziupdate Incoming Job Request")                    .setSound(uri)                    .setVibrate(new long[]{1000, 1000})                    .setAutoCancel(true)                    .setContentText("You have 1 new Job Request");            Intent resultIntent;            if (sessionTradesman.IsLoggedIn()) {                resultIntent = new Intent(this, TradesmanActivity.class);            } else {                resultIntent = new Intent(this, SplashTwo.class);                resultIntent.putExtra("data","You have 1 new Job Request");            }            saveData(getApplicationContext(), "message", msg.toString());            resultIntent.putExtra("ProblemId", Problem);            TaskStackBuilder stackBuilder = TaskStackBuilder.create(this);            stackBuilder.addParentStack(IncomingJobRequestDetail.class);            stackBuilder.addNextIntent(resultIntent);            PendingIntent resultPendingIntent = stackBuilder.getPendingIntent(0, PendingIntent.FLAG_UPDATE_CURRENT);            mBuilder.setContentIntent(resultPendingIntent);            NotificationManager mNotificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);            mNotificationManager.notify(NotificationID, mBuilder.build());        } else if (msg.equalsIgnoreCase("ACCEPTED")) {            Uri uri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);            NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(this)                    .setSmallIcon(R.drawable.mainlogo)                    .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.drawable.mainlogo))                    .setContentTitle("fixeziupdate Job Request")                    .setSound(uri)                    .setAutoCancel(true)                    .setVibrate(new long[]{1000, 1000})                    .setContentText("Your job request has been accepted by the Tradesman");            Intent resultIntent = new Intent(this, LoginActivity.class);            TaskStackBuilder stackBuilder = TaskStackBuilder.create(this);            stackBuilder.addParentStack(LoginActivity.class);            stackBuilder.addNextIntent(resultIntent);            PendingIntent resultPendingIntent = stackBuilder.getPendingIntent(0, PendingIntent.FLAG_UPDATE_CURRENT);            mBuilder.setContentIntent(resultPendingIntent);            NotificationManager mNotificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);            mNotificationManager.notify(NotificationID, mBuilder.build());        } else if (msg.equalsIgnoreCase("worker_request")) {            Uri uri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);            NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(this)                    .setSmallIcon(R.drawable.mainlogo)                    .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.drawable.mainlogo))                    .setContentTitle("fixeziupdate Received Job")                    .setSound(uri)                    .setAutoCancel(true)                    .setVibrate(new long[]{1000, 1000})                    .setContentText("Your have received 1 new job");            Intent resultIntent = new Intent(this, EmployeeLogin.class);            TaskStackBuilder stackBuilder = TaskStackBuilder.create(this);            stackBuilder.addParentStack(LoginActivity.class);            stackBuilder.addNextIntent(resultIntent);            PendingIntent resultPendingIntent = stackBuilder.getPendingIntent(0, PendingIntent.FLAG_UPDATE_CURRENT);            mBuilder.setContentIntent(resultPendingIntent);            NotificationManager mNotificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);            mNotificationManager.notify(NotificationID, mBuilder.build());        } else if (msg.equalsIgnoreCase("REJECTED")) {            Uri uri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);            NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(this)                    .setSmallIcon(R.drawable.mainlogo)                    .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.drawable.mainlogo))                    .setContentTitle("fixeziupdate Job Request")                    .setSound(uri)                    .setAutoCancel(true)                    .setVibrate(new long[]{1000, 1000})                    .setContentText("Your job request has been rejected by the Tradesman");            Intent resultIntent = new Intent(this, LoginActivity.class);            TaskStackBuilder stackBuilder = TaskStackBuilder.create(this);            stackBuilder.addParentStack(LoginActivity.class);            stackBuilder.addNextIntent(resultIntent);            PendingIntent resultPendingIntent = stackBuilder.getPendingIntent(0, PendingIntent.FLAG_UPDATE_CURRENT);            mBuilder.setContentIntent(resultPendingIntent);            NotificationManager mNotificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);            mNotificationManager.notify(NotificationID, mBuilder.build());        } else if (msg.equalsIgnoreCase("RESCHEDULE")) {            String Problem = intent.getExtras().getString("problem_id");            Log.e("Problem", ">>>" + Problem);            Uri uri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);            NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(this)                    .setSmallIcon(R.drawable.mainlogo)                    .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.drawable.mainlogo))                    .setContentTitle("fixeziupdate Reschedule Job Request")                    .setSound(uri)                    .setAutoCancel(true)                    .setVibrate(new long[]{1000, 1000})                    .setContentText("Touch to view Job Details");            Intent resultIntent = new Intent(this, RescheduleJobsDetail.class);            resultIntent.putExtra("ProblemId", Problem);            TaskStackBuilder stackBuilder = TaskStackBuilder.create(this);            stackBuilder.addParentStack(RescheduleJobsDetail.class);            stackBuilder.addNextIntent(resultIntent);            PendingIntent resultPendingIntent = stackBuilder.getPendingIntent(0, PendingIntent.FLAG_UPDATE_CURRENT);            mBuilder.setContentIntent(resultPendingIntent);            NotificationManager mNotificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);            mNotificationManager.notify(NotificationID, mBuilder.build());        } else if (msg.equalsIgnoreCase("CENCEL BY USER")) {            String Problem = intent.getExtras().getString("problem_id");            Log.e("Problem", ">>>" + Problem);            Uri uri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);            NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(this)                    .setSmallIcon(R.drawable.mainlogo)                    .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.drawable.mainlogo))                    .setContentTitle("fixeziupdate Job cancelled by user")                    .setSound(uri)                    .setAutoCancel(true)                    .setVibrate(new long[]{1000, 1000})                    .setContentText("Touch to view Job Details");            Intent resultIntent = new Intent(this, AllJobsDetail.class);            resultIntent.putExtra("ProblemId", Problem);            TaskStackBuilder stackBuilder = TaskStackBuilder.create(this);            stackBuilder.addParentStack(TradesmanLogin.class);            stackBuilder.addNextIntent(resultIntent);            PendingIntent resultPendingIntent = stackBuilder.getPendingIntent(0, PendingIntent.FLAG_UPDATE_CURRENT);            mBuilder.setContentIntent(resultPendingIntent);            NotificationManager mNotificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);            mNotificationManager.notify(NotificationID, mBuilder.build());        } else if (msg.equalsIgnoreCase("CANCELLED by User")) {            String Problem = intent.getExtras().getString("problem_id");            Log.e("Problem", ">>>" + Problem);            Uri uri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);            NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(this)                    .setSmallIcon(R.drawable.mainlogo)                    .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.drawable.mainlogo))                    .setContentTitle("fixeziupdate Job cancelled by user")                    .setSound(uri)                    .setAutoCancel(true)                    .setVibrate(new long[]{1000, 1000})                    .setContentText("Touch to view Job Details");            Intent resultIntent = new Intent(this, AllJobsDetail.class);            resultIntent.putExtra("ProblemId", Problem);            TaskStackBuilder stackBuilder = TaskStackBuilder.create(this);            stackBuilder.addParentStack(TradesmanLogin.class);            stackBuilder.addNextIntent(resultIntent);            PendingIntent resultPendingIntent = stackBuilder.getPendingIntent(0, PendingIntent.FLAG_UPDATE_CURRENT);            mBuilder.setContentIntent(resultPendingIntent);            NotificationManager mNotificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);            mNotificationManager.notify(NotificationID, mBuilder.build());        } else if (msg.equalsIgnoreCase("CANCELLED by user Trademan")) {            String Problem = intent.getExtras().getString("problem_id");            Log.e("Problem", ">>>" + Problem);            Uri uri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);            NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(this)                    .setSmallIcon(R.drawable.mainlogo)                    .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.drawable.mainlogo))                    .setContentTitle("fixeziupdate Job cancelled by Tradesman")                    .setSound(uri)                    .setAutoCancel(true)                    .setVibrate(new long[]{1000, 1000})                    .setContentText("Touch to view Job Details");            Intent resultIntent = new Intent(this, JobRequestUserDetail.class);            resultIntent.putExtra("ProblemId", Problem);            TaskStackBuilder stackBuilder = TaskStackBuilder.create(this);            stackBuilder.addParentStack(TradesmanLogin.class);            stackBuilder.addNextIntent(resultIntent);            PendingIntent resultPendingIntent = stackBuilder.getPendingIntent(0, PendingIntent.FLAG_UPDATE_CURRENT);            mBuilder.setContentIntent(resultPendingIntent);            NotificationManager mNotificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);            mNotificationManager.notify(NotificationID, mBuilder.build());        } else if (msg.equalsIgnoreCase("COMPLETED")) {            String Problem = intent.getExtras().getString("problem_id");            Log.e("Problem", ">>>" + Problem);            Uri uri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);            NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(this)                    .setSmallIcon(R.drawable.mainlogo)                    .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.drawable.mainlogo))                    .setContentTitle("Your fixeziupdate Job is Completed")                    .setSound(uri)                    .setAutoCancel(true)                    .setVibrate(new long[]{1000, 1000})                    .setContentText("Touch to view Job Details");            Intent resultIntent = new Intent(this, JobRequestUserDetail.class);            resultIntent.putExtra("ProblemId", Problem);            TaskStackBuilder stackBuilder = TaskStackBuilder.create(this);            stackBuilder.addParentStack(TradesmanLogin.class);            stackBuilder.addNextIntent(resultIntent);            PendingIntent resultPendingIntent = stackBuilder.getPendingIntent(0, PendingIntent.FLAG_UPDATE_CURRENT);            mBuilder.setContentIntent(resultPendingIntent);            NotificationManager mNotificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);            mNotificationManager.notify(NotificationID, mBuilder.build());        } else if (msg.equalsIgnoreCase("Reminder")) {            String Problem = intent.getExtras().getString("problem_id");            Log.e("Problem", ">>>" + Problem);            Uri uri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);            NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(this)                    .setSmallIcon(R.drawable.mainlogo)                    .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.drawable.mainlogo))                    .setContentTitle("Job Reminder.")                    .setSound(uri)                    .setAutoCancel(true)                    .setVibrate(new long[]{1000, 1000})                    .setContentText("You have a job booked 1 hour later from now.");            Intent resultIntent = new Intent(this, AllJobsDetail.class);            resultIntent.putExtra("ProblemId", Problem);            TaskStackBuilder stackBuilder = TaskStackBuilder.create(this);            stackBuilder.addParentStack(TradesmanLogin.class);            stackBuilder.addNextIntent(resultIntent);            PendingIntent resultPendingIntent = stackBuilder.getPendingIntent(0, PendingIntent.FLAG_UPDATE_CURRENT);            mBuilder.setContentIntent(resultPendingIntent);            NotificationManager mNotificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);            mNotificationManager.notify(NotificationID, mBuilder.build());        }    }}/*AIzaSyCvI7iGfC_qZInmS8Z9v0f297TknEP8bJ0*/